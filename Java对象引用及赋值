关键字：java对象 引用

Java对象及其引用

   最近，室友与我讨论一个他刷题过程中考虑的一个问题，其实就是给Linkedlist继续往后面接node，大部分同学看到这的时候感觉这种问题也太蠢了吧，但是后来仔细
   思考了一下，觉得问题虽然很容易解决，学过数据结构的同学都能写出来，但是这里面涉及的对象和对象引用的基本概念还是很值得写一片日志来记录下，毕竟能解决一个
   问题和讲明白一个问题还是有一定差距的。。。。 Ok, cut the crap，进入正题。
   
   当时我看到他写的代码，第一反应是觉得很奇怪，感觉没有人这样写啊。接下来是我室友写的代码(额。。大概是这样，我只写出问题的一段)
   public class LinkedList{
       // Node类
       static class Node{
          int val;
          Node next;
          public Node(int val){
              this.val = val;
          }
       }
       public static void main(String[] args){
          Node a = new Node(1);
          Node b = a;
          a = a.next;
          a = new Node(2);
       }
   }
   看到这里，我先是问了一句我室友：“你这是要干嘛。” 他回答：“就是往a后面继续加node啊！”
   按照我们以往的习惯，当你初始化一个Node的时候，以这个node为head，然后会再创建一个Node类的引用变量(b)指向这个head，然后再进行接下来的操作，这是这串
   代码我觉得看着很奇怪的第一点，第二点就是为啥明明只需要一行代码完成添加node的操作非要写两行，写两行也无所谓啦，关键是再我刷的那么多链表的题，没见过这
   的，不知道各位同学有没有相同的感觉(可能是我见识少了，本人也是小白一枚，各位大佬别喷我，会打击我自信心的哈哈)。
   
   我们这里先大概分析一下main函数里四行代码的意思，首先创建一个Node类(a)并赋初值为1，然后声明一个
   
